// Copyright 2019 Bull S.A.S. Atos Technologies - Bull, Rue Jean Jaures, B.P.68, 78340, Les Clayes-sous-Bois, France.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by go-enum
// DO NOT EDIT!

package events

import (
	"fmt"
	"strings"
)

const (
	// StatusChangeTypeInstance is a StatusChangeType of type Instance
	StatusChangeTypeInstance StatusChangeType = iota
	// StatusChangeTypeDeployment is a StatusChangeType of type Deployment
	StatusChangeTypeDeployment
	// StatusChangeTypeCustomCommand is a StatusChangeType of type CustomCommand
	StatusChangeTypeCustomCommand
	// StatusChangeTypeScaling is a StatusChangeType of type Scaling
	StatusChangeTypeScaling
	// StatusChangeTypeWorkflow is a StatusChangeType of type Workflow
	StatusChangeTypeWorkflow
	// StatusChangeTypeWorkflowStep is a StatusChangeType of type WorkflowStep
	StatusChangeTypeWorkflowStep
	// StatusChangeTypeAlienTask is a StatusChangeType of type AlienTask
	StatusChangeTypeAlienTask
	// StatusChangeTypeAttributeValue is a StatusChangeType of type AttributeValue
	StatusChangeTypeAttributeValue
)

const _StatusChangeTypeName = "InstanceDeploymentCustomCommandScalingWorkflowWorkflowStepAlienTaskAttributeValue"

var _StatusChangeTypeMap = map[StatusChangeType]string{
	0: _StatusChangeTypeName[0:8],
	1: _StatusChangeTypeName[8:18],
	2: _StatusChangeTypeName[18:31],
	3: _StatusChangeTypeName[31:38],
	4: _StatusChangeTypeName[38:46],
	5: _StatusChangeTypeName[46:58],
	6: _StatusChangeTypeName[58:67],
	7: _StatusChangeTypeName[67:81],
}

func (i StatusChangeType) String() string {
	if str, ok := _StatusChangeTypeMap[i]; ok {
		return str
	}
	return fmt.Sprintf("StatusChangeType(%d)", i)
}

var _StatusChangeTypeValue = map[string]StatusChangeType{
	_StatusChangeTypeName[0:8]:                    0,
	strings.ToLower(_StatusChangeTypeName[0:8]):   0,
	_StatusChangeTypeName[8:18]:                   1,
	strings.ToLower(_StatusChangeTypeName[8:18]):  1,
	_StatusChangeTypeName[18:31]:                  2,
	strings.ToLower(_StatusChangeTypeName[18:31]): 2,
	_StatusChangeTypeName[31:38]:                  3,
	strings.ToLower(_StatusChangeTypeName[31:38]): 3,
	_StatusChangeTypeName[38:46]:                  4,
	strings.ToLower(_StatusChangeTypeName[38:46]): 4,
	_StatusChangeTypeName[46:58]:                  5,
	strings.ToLower(_StatusChangeTypeName[46:58]): 5,
	_StatusChangeTypeName[58:67]:                  6,
	strings.ToLower(_StatusChangeTypeName[58:67]): 6,
	_StatusChangeTypeName[67:81]:                  7,
	strings.ToLower(_StatusChangeTypeName[67:81]): 7,
}

// ParseStatusChangeType attempts to convert a string to a StatusChangeType
func ParseStatusChangeType(name string) (StatusChangeType, error) {
	if x, ok := _StatusChangeTypeValue[name]; ok {
		return StatusChangeType(x), nil
	}
	return StatusChangeType(0), fmt.Errorf("%s is not a valid StatusChangeType", name)
}
